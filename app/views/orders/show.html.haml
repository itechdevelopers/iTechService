.page-header
  %h1
    = link_back_to_index
    = t('orders.order_num', num: @order.number)
    %small= link_to icon_tag('clock-o'), history_order_path(@order), style: 'text-decoration:none;', remote: true

  %span.help-block
    %small= timestamp_string_for @order
  = link_to icon_tag(:print) + t('tickets.link'), order_path(@order, format: 'pdf'), class: 'btn btn-primary', target: '_blank'

.row-fluid
  .span6
    %table.attributes_table
      %tr
        %td= Order.human_attribute_name :department
        %td
          %strong.text-warning= @order.department_name

      - if @order.user.present?
        %tr
          %td= Order.human_attribute_name :user
          %td= @order.user.short_name

      %tr
        %td= Order.human_attribute_name :customer
        %td
          - if @order.customer_type == 'Client'
            = link_to @order.customer_presentation, client_path(@order.customer)
          - else
            = @order.customer_presentation

      %tr
        %td= Order.human_attribute_name :object_kind
        %td= t("orders.object_kinds.#{@order.object_kind}")

      %tr
        %td= Order.human_attribute_name :object
        %td= @order.object

      %tr
        %td= Order.human_attribute_name :article
        %td= @order.article? ? @order.article : '-'
      %tr
        %td= Order.human_attribute_name :object_url
        %td= @order.object_url.present? ? link_to(@order.object_url, @order.object_url) : '-'

      %tr
        %td= Order.human_attribute_name(:picture)
        %td= image_tag(@order.picture.medium.url) if @order.picture?

      %tr
        %td= Order.human_attribute_name :approximate_price
        %td= @order.approximate_price.presence || '-'

      %tr
        %td= Order.human_attribute_name :quantity
        %td= @order.quantity

      %tr
        %td= Order.human_attribute_name :comment
        %td= @order.comment.present? ? @order.comment : '-'

      %tr
        %td= Order.human_attribute_name :desired_date
        %td= @order.desired_date.present? ? l(@order.desired_date) : '-'

      %tr
        %td= Order.human_attribute_name :status
        %td.status= t("orders.statuses.#{@order.status}")

      %tr.archive_reason
        - if @order.archived?
          %td= Order.human_attribute_name :archive_reason
          %td= t("orders.archive_reasons.#{@order.archive_reason}") || '-'

      %tr.archive_comment
        - if @order.archived?
          %td= Order.human_attribute_name :archive_comment
          %td= @order.archive_comment || '-'

      %tr
        %td= Order.human_attribute_name :user_comment
        %td= @order.user_comment.present? ? @order.user_comment : '-'

      %tr
        %td= Order.human_attribute_name(:model)
        %td= @order.model || '-'

      %tr
        %td= Order.human_attribute_name(:prepayment)
        %td= @order.prepayment.present? ? number_to_currency(@order.prepayment) : '-'

      %tr
        %td= Order.human_attribute_name(:payment_method)
        %td= @order.payment_method.present? ? Order.human_attribute_name("payment_method.#{@order.payment_method}") : '-'

      %tr
        %td 1C Синхронизация
        %td
          #sync_status_container
            - sync_record = @order.one_c_sync
            - if sync_record.present?
              - case sync_record.sync_status
              - when 'synced'
                %span.label.label-success
                  %i.fa.fa-check
                  Синхронизировано
              - when 'pending', 'syncing'
                %span.label.label-warning
                  %i.fa.fa-clock-o
                  = sync_record.syncing? ? 'Синхронизация...' : 'Ожидание'
              - when 'failed', 'permanently_failed'
                %span.label.label-important
                  %i.fa.fa-exclamation-triangle
                  Ошибка синхронизации
              - when 'deleted'
                %span.label.label-info
                  %i.fa.fa-trash
                  Удален в 1С
              - if sync_record.external_id.present?
                %br
                %small Номер в 1С: #{sync_record.external_id}
              - if sync_record.last_error.present?
                %br
                %small.text-error= sync_record.last_error
              - if sync_record.attention_required?
                %br
                %span.label.label-warning
                  %i.fa.fa-warning
                  Требует внимания
            - else
              %span.label.label-default Не синхронизировано

          - if can? :edit, @order
            %br
            %button#manual_sync_btn.btn.btn-small.btn-primary{type: 'button', data: {order_id: @order.id}}
              %i.fa.fa-refresh
              Синхронизировать вручную
            -# Hidden: Delete from 1C button (automatic deletion now happens on archive)
            -# - if sync_record&.synced? && can?(:manual_sync, @order)
            -#   %button#delete_from_one_c_btn.btn.btn-small.btn-danger{type: 'button', data: {order_id: @order.id}, style: 'margin-left: 5px;'}
            -#     %i.fa.fa-trash
            -#     Удалить из 1С
            #sync_feedback{style: 'margin-top: 5px;'}
            #delete_feedback{style: 'margin-top: 5px;'}

    - if can? :manage, Order
      .form-actions
        = link_to_edit @order if can? :edit, @order
        = archive_button @order if can? :edit_archive_reason, @order

  .span6
    #order_notes.order_notes= cell(OrderNote::Cell::Item, collection: @order.notes.oldest_first).()
    = cell(OrderNote::Cell::Form, @order.notes.build).()

:javascript
  $order_notes = $('.order_notes');
  $order_notes.scrollTop($order_notes[0].scrollHeight);

  // Manual sync functionality
  $('#manual_sync_btn').on('click', function() {
    var $btn = $(this);
    var $feedback = $('#sync_feedback');
    var orderId = $btn.data('order-id');
    
    // Disable button and show loading state
    $btn.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Синхронизация...');
    $feedback.empty();
    
    $.ajax({
      url: '/orders/' + orderId + '/manual_sync',
      type: 'POST',
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(response) {
        if (response.success) {
          $feedback.html('<div class="alert alert-success"><i class="fa fa-check"></i> ' + response.message + '</div>');
          // Reload page after 2 seconds to show updated sync status
          setTimeout(function() {
            location.reload();
          }, 2000);
        } else {
          $feedback.html('<div class="alert alert-error"><i class="fa fa-exclamation-triangle"></i> ' + response.message + '</div>');
          enableSyncButton($btn, response.next_available_at);
        }
      },
      error: function() {
        $feedback.html('<div class="alert alert-error"><i class="fa fa-exclamation-triangle"></i> Произошла ошибка при синхронизации</div>');
        enableSyncButton($btn);
      }
    });
  });

  function enableSyncButton($btn, nextAvailableAt) {
    if (nextAvailableAt) {
      // Calculate remaining time and show countdown
      var now = Math.floor(Date.now() / 1000);
      var remainingSeconds = nextAvailableAt - now;
      
      if (remainingSeconds > 0) {
        var countdown = setInterval(function() {
          remainingSeconds--;
          if (remainingSeconds <= 0) {
            clearInterval(countdown);
            $btn.prop('disabled', false).html('<i class="fa fa-refresh"></i> Синхронизировать вручную');
          } else {
            var minutes = Math.floor(remainingSeconds / 60);
            var seconds = remainingSeconds % 60;
            $btn.html('<i class="fa fa-clock-o"></i> Доступно через ' + minutes + ':' + (seconds < 10 ? '0' : '') + seconds);
          }
        }, 1000);
        return;
      }
    }
    
    // Re-enable button immediately
    $btn.prop('disabled', false).html('<i class="fa fa-refresh"></i> Синхронизировать вручную');
  }

  // Delete from 1C functionality
  $('#delete_from_one_c_btn').on('click', function() {
    var $btn = $(this);
    var $feedback = $('#delete_feedback');
    var orderId = $btn.data('order-id');
    
    // Show confirmation dialog
    if (!confirm('Вы уверены, что хотите удалить заказ из 1С? Это действие нельзя отменить.')) {
      return;
    }
    
    // Disable button and show loading state
    $btn.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Удаление...');
    $feedback.empty();
    
    $.ajax({
      url: '/orders/' + orderId + '/delete_from_one_c',
      type: 'POST',
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(response) {
        if (response.success) {
          $feedback.html('<div class="alert alert-success"><i class="fa fa-check"></i> ' + response.message + '</div>');
          // Reload page after 2 seconds to show updated status
          setTimeout(function() {
            location.reload();
          }, 2000);
        } else {
          $feedback.html('<div class="alert alert-error"><i class="fa fa-exclamation-triangle"></i> ' + response.message + '</div>');
          $btn.prop('disabled', false).html('<i class="fa fa-trash"></i> Удалить из 1С');
        }
      },
      error: function() {
        $feedback.html('<div class="alert alert-error"><i class="fa fa-exclamation-triangle"></i> Произошла ошибка при удалении</div>');
        $btn.prop('disabled', false).html('<i class="fa fa-trash"></i> Удалить из 1С');
      }
    });
  });
