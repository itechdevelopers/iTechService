- service_job = @device_task.service_job
- if @device_task.done? && @device_task.errors.empty? && !current_user.superadmin?
  .modal-header
    %a.close{'data-dismiss' => 'modal', href: '#'}
      %i.fa.fa-times-circle
    %h3= @device_task.service_job.type_name

  .modal-body
    = @device_task.errors.full_messages
    .alert.alert-info
      %strong= @device_task.task_name
      %br
      = @device_task.comment
    %dl.dl-horizontal
      %dt= DeviceTask.human_attribute_name :user_comment
      %dd= @device_task.user_comment || '-'
      %dt= DeviceTask.human_attribute_name :cost
      %dd= human_currency @device_task.cost
      - if can? :write_tech_notice, @device_task.service_job || ServiceJob
        %dt= ServiceJob.human_attribute_name :tech_notice
        %dd= @device_task.service_job.tech_notice

    - if @device_task.is_repair?
      %h4
        = DeviceTask.human_attribute_name :repair_tasks
      #repair_tasks
        - @device_task.repair_tasks.each do |repair_task|
          .well.well-small
            %dl.dl-horizontal
              %dt= RepairTask.human_attribute_name :price
              %dd= human_currency repair_task.price
            %table.table.table-condensed
              %caption
                %h4= RepairTask.human_attribute_name :repair_parts
              %thead
                %tr
                  %th
                  %th= RepairPart.human_attribute_name(:warranty_term)
              %tbody
                - repair_task.repair_parts.each do |repair_part|
                  %tr
                    %td= [repair_part.name, repair_part.quantity].join ' X '
                    %td= repair_part.warranty_term

- else
  = simple_form_for @device_task, html: { class: 'form-horizontal', remote: true } do |f|
    .modal-header
      %a.close{'data-dismiss' => 'modal', href: '#'}
        %i.fa.fa-times-circle
      %h3
        = @device_task.service_job.type_name

    .modal-body
      .alert.alert-info
        %strong= @device_task.task_name
        %br
        = @device_task.comment

      - if f.object.errors.any?
        .alert.alert-error
          = f.object.errors.full_messages.join('. ')

      .row-fluid
        .span6
          .control-group
            .controls= link_to t('.task_templates'), task_templates_path, remote: true, class: 'btn btn-link'
            #task_templates_container

          .control-group
            .controls{style: 'color:red'}
              Информацию которую вы вводите сюда, будет отображаться в заказ-наряде. Поэтому будте внимательны.
          = f.input :user_comment, input_html: {rows: 3}
          = f.input :cost
          = f.input :done, as: :done_status, disabled: @device_task.done
          - if @device_task.mac_service?
            = f.association :performer, label: 'Кто выполнил задачу?', collection: mac_service_helper_options,
                            label_method: :presentation

          - # Service Job fields for streamlined completion
          - if policy(@device_task.service_job).update? || policy(@device_task.service_job).move_transfers?
            = f.simple_fields_for :service_job do |sj_form|
              - if @device_task.service_job.notify_client?
                = sj_form.input :client_notified, as: :radio_buttons,
                                collection: [[true, t('yep')], [false, t('not_accessible')]],
                                required: true, value_method: :first, label_method: :last
              = sj_form.association :location, as: :location

        .span6
          %b Заметки
          .device_notes{id: "device_notes_#{service_job.id}"}= render service_job.device_notes.oldest_first, editable: false

      - if can? :write_tech_notice, @device_task.service_job || ServiceJob
        = f.simple_fields_for :service_job do |ff|
          = ff.input :tech_notice, input_html: {rows: 3}

      - if @device_task.is_repair? && can?(:repair, @device_task.service_job || ServiceJob)
        %h4
          = DeviceTask.human_attribute_name :repair_tasks
          = link_to glyph(:plus) + t('device_tasks.add_repair_task').html_safe,
                    choose_repair_services_path(device_task_id: @device_task.id),
                    remote: true, id: 'choose_repair_service_link', class: 'btn btn-success btn-small'
        - if f.object.errors.any?
          - f.object.errors[:base].each do |error|
            %p.text-error= error
        #repair_services_choose_form_container.well.well-small
        #repair_tasks= f.simple_fields_for(:repair_tasks) { |ff| render 'repair_task_fields', f: ff }

        - if @device_task.available_check_lists.any?
          %h4= t('check_lists.title', default: 'Check Lists')
          .well.well-small
            - @device_task.available_check_lists.each_with_index do |check_list, index|
              - response = check_list_response_for(@device_task, check_list) || @device_task.check_list_responses.build(check_list: check_list)
              .check-list-container.control-group
                %label.control-label= check_list.name
                .controls
                  = hidden_field_tag "device_task[check_list_responses_attributes][#{index}][check_list_id]", check_list.id
                  - if response.persisted?
                    = hidden_field_tag "device_task[check_list_responses_attributes][#{index}][id]", response.id

                  - if check_list.has_main_question?
                    - # Render main question separately with radio buttons
                    - main_item = check_list.main_question
                    - current_answer = response.answer_for_item(main_item.id)
                    .check-list-question-group
                      .question-text
                        = main_item.question
                        - if main_item.required?
                          %span.required *
                      .radio-group
                        %label.radio.inline
                          = radio_button_tag "device_task[check_list_responses_attributes][#{index}][responses][#{main_item.id}]",
                                            "yes",
                                            current_answer == "yes" || current_answer == "true",
                                            id: "device_task_check_list_responses_attributes_#{index}_responses_#{main_item.id}_yes",
                                            class: 'main-question-radio',
                                            required: main_item.required?
                          = t('yep')
                        %label.radio.inline
                          = radio_button_tag "device_task[check_list_responses_attributes][#{index}][responses][#{main_item.id}]",
                                            "no",
                                            current_answer == "no",
                                            id: "device_task_check_list_responses_attributes_#{index}_responses_#{main_item.id}_no",
                                            class: 'main-question-radio',
                                            required: main_item.required?
                          = t('simple_form.no')

                    - # Render subordinate questions in a container
                    - main_answer_yes = (current_answer == "yes" || current_answer == "true")
                    .subordinate-questions{style: main_answer_yes ? '' : 'display: none;'}
                      - check_list.subordinate_items.each do |item|
                        - item_answer = response.answer_for_item(item.id)
                        .check-list-question-group
                          .question-text.subordinate-indent
                            = item.question
                            - if item.required?
                              %span.required *
                          .radio-group.subordinate-indent
                            %label.radio.inline
                              = radio_button_tag "device_task[check_list_responses_attributes][#{index}][responses][#{item.id}]",
                                                "yes",
                                                item_answer == "yes" || item_answer == "true",
                                                id: "device_task_check_list_responses_attributes_#{index}_responses_#{item.id}_yes",
                                                required: item.required?
                              = t('yep')
                            %label.radio.inline
                              = radio_button_tag "device_task[check_list_responses_attributes][#{index}][responses][#{item.id}]",
                                                "no",
                                                item_answer == "no",
                                                id: "device_task_check_list_responses_attributes_#{index}_responses_#{item.id}_no",
                                                required: item.required?
                              = t('simple_form.no')
                  - else
                    - # No main question, render all items normally with radio buttons
                    - check_list_items_for(check_list).each do |item|
                      - item_answer = response.answer_for_item(item.id)
                      .check-list-question-group
                        .question-text
                          = item.question
                          - if item.required?
                            %span.required *
                        .radio-group
                          %label.radio.inline
                            = radio_button_tag "device_task[check_list_responses_attributes][#{index}][responses][#{item.id}]",
                                              "yes",
                                              item_answer == "yes" || item_answer == "true",
                                              id: "device_task_check_list_responses_attributes_#{index}_responses_#{item.id}_yes",
                                              required: item.required?
                            = t('yep')
                          %label.radio.inline
                            = radio_button_tag "device_task[check_list_responses_attributes][#{index}][responses][#{item.id}]",
                                              "no",
                                              item_answer == "no",
                                              id: "device_task_check_list_responses_attributes_#{index}_responses_#{item.id}_no",
                                              required: item.required?
                            = t('simple_form.no')
    .modal-footer
      = submit_button f